# yaml-language-server: $schema=./projects.schema.json

- name: Graduate Student Research Assistant (GSRA)
  description: The Graduate Student Research Assistantship (GSRA) program at the University of Michigan-Flint is a vehicle to provide financial support for the academically-related research activities of active UM-Flint graduate students.
  active: true
  projects:
    - title: Selecting Requirements for the Next Release Problem with Optimization Algorithms
      description: This project will be divided into two phases. The phase one will address a systematic literature review, where the student will identify, evaluate and synthesize all available papers related to optimization algorithms and software requirements. The process will involve a rigorous and comprehensive search of published studies in the main venues, as well as a critical assessment of their quality and relevance. As an output of this phase, the student is expected to write a research paper addressing all findings and submit it to a journal in the Software Engineering area. The phase two will address the application of the state-of-the-art optimization algorithm found in the previous phase. The idea is to implement the algorithm, run experiments, and compare the results against the most related work in the NRP problem. Also, in the end, the student is expected to write a research paper and submit it to a conference in the Software Engineering area.
      url: https://careers.umich.edu
      targets:
        - master
        - phd
      active: true

- name: CIT START Program
  description: START is a new program in CIT that offers a mechanism for faculty members to obtain preliminary results for new and innovative research that is not yet ready for external proposal submission.
  active: false
  projects:
    - title: Towards Meaningful and Real Refactoring Operations
      description: Up to 75% of the cost of designing a software system can be attributed to post-deployment maintenance and evolution. In this context, Software Refactoring can lower these expenses by raising the software quality. Software Refactoring has several advantages, but its process can be difficult, error-prone, and time-consuming. Thus, automated refactoring tools have been proposed in the literature aiming to deal with these tasks. However, the state-of-the-art tools still lack trustworthiness when suggesting refactorings. In some cases, the recommended refactorings are inadequate or invalid (e.g., if applied, they can affect the code’s functionality and understanding), leading to developers avoiding such automated tools. Part of this problem is the lack of a comprehensive set of pre-conditions (or rules) used to derive the refactoring recommendation(s). In some cases, these sets of conditions are so simple (or naive) that the refactoring recommendation does not make sense and the developers avoid them and, as a consequence, the automated tools that generate them
      url: https://careers.umich.edu
      active: false

- name: Undergraduate Research Opportunity Program (UROP)
  description: The Undergraduate Research Opportunity Program (UROP) is designed to support collaborations between UM-Flint undergraduate students and faculty researchers. UROP allows students to earn paid (or volunteer) hands-on research experience working alongside faculty on cutting-edge projects.
  active: false
  projects:
    - title: Arduino-powered Autonomous 'Follow Me' Car With Obstacle Avoidance
      description: An autonomous “Follow me” car is a self-driving vehicle that can navigate itself without human intervention to follow a person wherever he/she moves. Complex autonomous driving algorithms, including perception, localization, planning, and control, are needed for autonomous driving, along with a wide variety of heterogeneous sensors, actuators, and computers. In this project, the students will build a prototype for an autonomous “follow me” car powered by Arduino. By using ultrasound sensors and actuators as electric motors, the car will follow a person through GPS location avoiding obstacles by predicting the safest pathway to reach the target. The students will read research papers on predictive models by using machine learning and implement them in the car. The data collected by the ultrasound sensors will be used for training and validation. Experiments will be carried out to compare the performance by using a naive avoidance algorithm (such as those using if-statements) against predictive models.
      url: https://umflint.infoready4.com/#competitionDetail/1891954
      active: false

    - title: Mining and Data Analysis on GitHub Repositories
      description: GitHub is the largest source code repository built on top of Git (a version control system). In the last years, a number of research papers have been published reporting findings based on data mined from GitHub. Because of that, the software community continues to improve its understanding of software engineering thanks to the analysis performed on this platform. In this project, the students will have the opportunity to learn how to create datasets with data extracted from GitHub's API and apply some data analysis techniques (for instance, clustering and decision tree algorithms) to classify such data.
      url: https://umflint.infoready4.com/#competitionDetail/1891855
      targets:
        - undergraduate
      active: false

    - title: Selecting the best set of software requirements for the next software release by using optimization algorithms
      url: https://umflint.infoready4.com/#competitionDetail/1891856
      targets:
        - undergraduate
      description: The selection of the requirements to be included in the next software release is a complex task in every software development, mainly because it addresses several conflicting goals and limited resources, such as available time, budget, and software developers. Hence, the best set of requirements to be implemented in the next release needs to be selected. This project aims to identify which conflicting attributes a requirement has before being selected and then apply optimization algorithms to select the best subset of software requirements. The students will also learn about the optimization research area and they will implement their own genetic algorithm (GA)
      active: false
